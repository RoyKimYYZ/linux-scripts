apiVersion: v1
type: kubernetes.io/tls
kind: Secret
metadata:
  name: ingress-gateway-tlscerts
  namespace: istio-system
#data:
  # tls.key: <>
  # tls.crt: <>

---

apiVersion: v1
type: Opaque
kind: Secret
metadata:
  name: kubernetes-dashboard-certs
  namespace: kubernetes-dashboard
  labels:
    addonmanager.kubernetes.io/mode : Reconcile
    app: kubernetes-dashboard
# data:
#   tls.key: <>
#   tls.crt: <>

---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: kube-dashboard-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: PASSTHROUGH
    # hosts:
    # - ""
    
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kube-dashboard-vs
  namespace: istio-system
spec:
  hosts:
  - ""
  gateways:
  - wildcard-cert-gateway
  http:
  - route:
    - destination:
        host: kubernetes-dashboard.kube-system.svc.cluster.local
        port:
          number: 443

---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: wildcard-cert-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*.rkim.com"
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: "ingress-gateway-tlscerts"
    hosts:
    - "*"

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kiali
  namespace: istio-system
spec:
  hosts:
  - "*"
  # gateways:
  # - wildcard-cert-gateway
  http:
  - route:
    - destination:
        host: kiali.istio-system.svc.cluster.local
        port:
          number: 20001

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: prometheus
  namespace: istio-system
spec:
  hosts:
  - "*"
  gateways:
  - wildcard-cert-gateway
  http:
  - route:
    - destination:
        host: prometheus.istio-system.svc.cluster.local
        port:
          number: 9090

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: grafana-istio
  namespace: istio-system
spec:
  hosts:
  - "*"
  gateways:
  - wildcard-cert-gateway
  http:
  - route:
    - destination:
        host: grafana.istio-system.svc.cluster.local
        port:
          number: 3000
